pool:
  vmImage: 'Ubuntu 16.04'

steps:
- script: |
    echo Getting the latest GCC version:
    sudo add-apt-repository ppa:jonathonf/gcc -y
    sudo apt-get -qq update
  displayName: 'Add GCC 8.1 Repository'

- script: |
    sudo add-apt-repository ppa:jonathonf/gcc -y
    sudo apt-get -qq update
  displayName: 'Update Distro'

- script: |
    sudo apt-get install -y build-essential software-properties-common
    sudo apt-get install -y gcc-8
    sudo apt-get install -y mingw-w64 libgmp-dev bison
    sudo apt-get install -y libmpfr-dev libmpc-dev
    sudo apt-get install -y byacc texinfo
    sudo apt-get install -y zip gzip tar
  displayName: 'Install Required Packages'

- bash: |
    cd $BUILD_SOURCESDIRECTORY
    touch "CHANGELOG.txt"
    git log --oneline --decorate > CHANGELOG.txt
  displayName: 'Create Changelog'

- script: |
    bash ./build.sh
  displayName: 'Build Project'
  continueOnError: false

# After Success
- script: npm install -g azure-cli
  displayName: 'Install Azure CLI'

- bash: |
    if [[ $BUILD_SOURCEBRANCHNAME == "master" ]];then
    azure telemetry --disable

    azure storage blob upload -q -a $AZURE_STORAGE_ACCOUNT -k $AZURE_STORAGE_ACCESS_KEY 
    $BUILD_SOURCESDIRECTORY/scripts/build/gcc-toolchain-mips64-linux64.tar.gz binaries "$BUILD_STAGINGDIRECTORY/gcc-toolchain-mips64-linux64.tar.gz";

    azure storage blob upload -q -a $AZURE_STORAGE_ACCOUNT -k $AZURE_STORAGE_ACCESS_KEY
    $BUILD_SOURCESDIRECTORY/scripts/build/gcc-toolchain-mips64-win64.zip binaries "$BUILD_STAGINGDIRECTORY/gcc-toolchain-mips64-win64.zip";
    fi
  displayName: 'Upload build artifacts to Azure blog storage'

- bash: |
    cd $BUILD_SOURCESDIRECTORY
    sed -e s%@TIMESTAMP@%"`ruby -e 'require "time"; print Time::parse(\`git log --format="%cd" -n 1\`.chomp).strftime("%Y-%m-%dT%H:%M:%SZ")'`"% .travis.bintray.json.in > .travis.bintray.json
  displayName: 'Setup the deploy file'

#deploy:
#  provider: bintray
#  user: $BINTRAY_USER
#  key: $BINTRAY_API_KEY
#  file: .travis.bintray.json
#  skip_cleanup: true #required otherwise the git is stashed before deploy happens


#notifications:
#  email: false